services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: seo_postgres
    environment:
      POSTGRES_DB: seo_auditing
      POSTGRES_USER: seo_user
      POSTGRES_PASSWORD: seo_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U seo_user -d seo_auditing"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: seo_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Adminer - Database Web UI
  adminer:
    image: adminer:latest
    container_name: seo_adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha
    depends_on:
      - postgres
    restart: unless-stopped

  # SEO Auditing App (optional for testing)
  app:
    build: .
    container_name: seo_app
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://seo_user:seo_password@postgres:5432/seo_auditing
      REDIS_URL: redis://redis:6379/0
      DEBUG: "True"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    working_dir: /app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped

  # Celery Worker
  celery-worker:
    build: .
    container_name: seo_celery_worker
    environment:
      DATABASE_URL: postgresql://seo_user:seo_password@postgres:5432/seo_auditing
      REDIS_URL: redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    working_dir: /app
    command: celery -A app.core.celery_app worker --loglevel=info --queues=scans,monitoring
    restart: unless-stopped

  # Celery Beat (scheduler)
  celery-beat:
    build: .
    container_name: seo_celery_beat
    environment:
      DATABASE_URL: postgresql://seo_user:seo_password@postgres:5432/seo_auditing
      REDIS_URL: redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    working_dir: /app
    command: celery -A app.core.celery_app beat --loglevel=info
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: seo_network