[tool:pytest]
# Pytest configuration for SEO Auditing Solution

# Test discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests

# Async support
addopts = 
    --asyncio-mode=auto
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=app
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    api: marks tests as API tests
    services: marks tests as service layer tests
    models: marks tests as model tests
    seo: marks tests as SEO analyzer tests
    tasks: marks tests as background task tests
    external: marks tests that require external resources

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::pytest.PytestUnraisableExceptionWarning

# Minimum version
minversion = 7.0

# Required plugins
required_plugins = 
    pytest-asyncio>=0.21.0
    pytest-cov>=4.0.0
    pytest-mock>=3.10.0

# Async configuration
asyncio_mode = auto

# Coverage configuration
[coverage:run]
source = app
omit = 
    app/__pycache__/*
    app/tests/*
    */migrations/*
    */venv/*
    */virtualenv/*
    .tox/*
    */site-packages/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

show_missing = True
precision = 2

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml